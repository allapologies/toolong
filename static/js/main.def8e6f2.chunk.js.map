{"version":3,"sources":["img/tier-logo.svg","components/useClipboard.jsx","components/useBitlyAPI.jsx","components/index.js","components/ShortenUrlForm.jsx","App.jsx","index.jsx"],"names":["useClipboard","save","useCallback","value","a","navigator","clipboard","writeText","useBitlyAPI","useState","status","error","result","state","setState","getShortLink","text","fetch","method","body","JSON","stringify","long_url","headers","Authorization","process","response","json","res","includes","link","description","Error","message","ShortenUrlForm","setValue","saveToClipboard","onChange","e","target","onSubmit","event","preventDefault","React","useEffect","htmlFor","placeholder","id","type","disabled","className","App","src","logo","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAAe,G,MAAA,IAA0B,uC,sCCW1BA,EATM,WAIjB,MAAO,CACHC,KAJSC,sBAAW,uCAAC,WAAOC,GAAP,SAAAC,EAAA,sEACfC,UAAUC,UAAUC,UAAUJ,GADf,2CAAD,sDAErB,MCuDQK,EAxDK,WAChB,MAA0BC,mBAAS,CAAEC,OAAQ,GAAIC,MAAO,KAAMC,OAAQ,KAAtE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAeb,sBAAW,uCAC5B,WAAOc,GAAP,iBAAAZ,EAAA,6DACIU,EAAS,CAAEJ,OAAQ,UAAWC,MAAO,KAAMC,OAAQ,KADvD,kBAI+BK,MAVhB,uCAUsC,CACzCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBC,SAAUN,IAEdO,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYC,+CAXzC,cAIcC,EAJd,gBAe0BA,EAASC,OAfnC,OAecC,EAfd,OAiBY,CAAC,IAAK,KAAKC,SAASH,EAAShB,QAC7BI,EAAS,CACLJ,OAAQ,UACRC,MAAO,KACPC,OAAQgB,EAAIE,OAGhBhB,EAAS,CACLJ,OAAQ,QACRC,MAAOiB,EAAIG,YACXnB,OAAQ,KA3BxB,kDA+BY,gBAAaoB,OACblB,EAAS,CAAEJ,OAAQ,QAASC,MAAO,KAAEsB,QAASrB,OAAQ,KAE1DE,EAAS,CACLJ,OAAQ,QACRC,MAAO,gBACPC,OAAQ,KArCpB,0DAD4B,sDA0C5B,CAACC,EAAOC,IAGZ,MAAO,CACHJ,OAAQG,EAAMH,OACdC,MAAOE,EAAMF,MACbC,OAAQC,EAAMD,OACdG,iB,OCtDOmB,ECGQ,WACnB,MAA0BzB,mBAAS,IAAnC,mBAAON,EAAP,KAAcgC,EAAd,KAEA,EAAgD3B,IAAxCE,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,OAAQD,EAAxB,EAAwBA,MAAOI,EAA/B,EAA+BA,aACjBqB,EAAoBpC,IAA1BC,KAEFoC,EAAWnC,uBAAY,SAACoC,GAC1BH,EAASG,EAAEC,OAAOpC,SACnB,IAEGqC,EAAWtC,uBACb,SAACuC,GACGA,EAAMC,iBACN3B,EAAaZ,KAEjB,CAACA,IASL,OANAwC,IAAMC,WAAU,WACRhC,GACAwB,EAAgBxB,KAErB,CAACA,IAGA,uBAAM4B,SAAUA,EAAhB,UACI,wBAAOK,QAAQ,UAAf,iBAEI,uBACIC,YAAY,iBACZC,GAAG,UACHC,KAAK,OACL7C,MAAOA,EACPkC,SAAUA,OAGlB,uBACIW,KAAK,SACL7C,MAAM,uBACN8C,SAAqB,YAAXvC,IAAyBP,IAE3B,YAAXO,GACG,qBAAKwC,UAAU,UAAf,mBAA6BtC,EAA7B,2BAEQ,UAAXF,GAAsB,qBAAKwC,UAAU,QAAf,SAAwBvC,QCpC5CwC,EARH,kBACR,sBAAKD,UAAU,MAAf,UACI,qBAAKE,IAAKC,EAAMH,UAAU,WAAWI,IAAI,SACzC,yDACA,cAAC,EAAD,QCJRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.def8e6f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tier-logo.b46cecf9.svg\";","import { useCallback } from 'react';\n\nconst useClipboard = () => {\n    const save = useCallback(async (value) => {\n        await navigator.clipboard.writeText(value);\n    }, []);\n    return {\n        save,\n    };\n};\n\nexport default useClipboard;\n","import { useCallback, useState } from 'react';\n\nconst BIT_LY_API_URL = 'https://api-ssl.bitly.com/v4/shorten';\n\nconst useBitlyAPI = () => {\n    const [state, setState] = useState({ status: '', error: null, result: '' });\n\n    const getShortLink = useCallback(\n        async (text) => {\n            setState({ status: 'loading', error: null, result: '' });\n\n            try {\n                const response = await fetch(BIT_LY_API_URL, {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        long_url: text,\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${process.env.REACT_APP_BITLY_AUTHORIZATION_TOKEN}`,\n                    },\n                });\n\n                const res = await response.json();\n\n                if ([200, 201].includes(response.status)) {\n                    setState({\n                        status: 'success',\n                        error: null,\n                        result: res.link,\n                    });\n                } else {\n                    setState({\n                        status: 'error',\n                        error: res.description,\n                        result: '',\n                    });\n                }\n            } catch (e) {\n                if (e instanceof Error) {\n                    setState({ status: 'error', error: e.message, result: '' });\n                }\n                setState({\n                    status: 'error',\n                    error: 'Unknown error',\n                    result: '',\n                });\n            }\n        },\n        [state, setState],\n    );\n\n    return {\n        status: state.status,\n        error: state.error,\n        result: state.result,\n        getShortLink,\n    };\n};\n\nexport default useBitlyAPI;\n","import ShortenUrlForm from './ShortenUrlForm';\n\nexport default ShortenUrlForm;\n","import React, { useCallback, useState } from 'react';\n\nimport useClipboard from './useClipboard';\nimport useBitlyAPI from './useBitlyAPI';\n\nconst ShortenUrlForm = () => {\n    const [value, setValue] = useState('');\n\n    const { status, result, error, getShortLink } = useBitlyAPI();\n    const { save: saveToClipboard } = useClipboard();\n\n    const onChange = useCallback((e) => {\n        setValue(e.target.value);\n    }, []);\n\n    const onSubmit = useCallback(\n        (event) => {\n            event.preventDefault();\n            getShortLink(value);\n        },\n        [value],\n    );\n\n    React.useEffect(() => {\n        if (result) {\n            saveToClipboard(result);\n        }\n    }, [result]);\n\n    return (\n        <form onSubmit={onSubmit}>\n            <label htmlFor=\"shorten\">\n                Url:\n                <input\n                    placeholder=\"Url to shorten\"\n                    id=\"shorten\"\n                    type=\"text\"\n                    value={value}\n                    onChange={onChange}\n                />\n            </label>\n            <input\n                type=\"submit\"\n                value=\"Shorten and copy URL\"\n                disabled={status === 'loading' || !value}\n            />\n            {status === 'success' && (\n                <div className=\"success\">{`${result} copied to clipboard!`}</div>\n            )}\n            {status === 'error' && <div className=\"error\">{error}</div>}\n        </form>\n    );\n};\n\nexport default ShortenUrlForm;\n","import React from 'react';\nimport logo from './img/tier-logo.svg';\nimport './css/App.css';\nimport ShortenUrlForm from './components';\n\nconst App = () => (\n    <div className=\"App\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>Change mobility for good</p>\n        <ShortenUrlForm />\n    </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}